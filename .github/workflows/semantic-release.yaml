name: Release
on:
  push:
    branches:
      - master

permissions:
  contents: read

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"

      - name: Install dependencies
        run: npm clean-install

      - name: Verify integrity of installed dependencies
        run: npm audit signatures

      - name: Make build script executable
        run: chmod +x ./my-build-script.sh  # Робимо скрипт виконуваним

      - name: Run semantic-release to calculate version
        id: semantic_release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}  # Використовуємо секрет для GitHub API
        run: |
          VERSION=$(npx semantic-release --no-ci)
          echo "VERSION=$VERSION" >> $GITHUB_ENV  # Записуємо версію у змінну оточення
          echo "Next release version: $VERSION"  # Виводимо версію в логи

      - name: Run the build script with the version
        env:
          VERSION: ${{ env.VERSION }}  # Використовуємо передану версію
        run: ./my-build-script.sh $VERSION  # Запускаємо скрипт

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}  # Використовуємо секрет для GitHub API
        run: npx semantic-release  # Створюємо реліз
