name: Build and Push Docker Image

on:
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          # Налаштування для авторизації
          token: ${{ secrets.GITHUB_TOKEN }}

      # Set up Node.js with the latest LTS version
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "lts/*"

      # Install dependencies
      - name: Install dependencies
        run: npm install

      # Run semantic-release
      - name: Run semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Використовуємо токен GitHub
        run: npx semantic-release

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      # Clean up old images
      - name: Clean up old images
        run: |
          BRANCH_NAME=$(echo "${GITHUB_REF_NAME}" | sed 's/refs\/heads\///' | sed 's/[^a-zA-Z0-9_-]/-/g')
          REPOSITORY_NAME=${{ secrets.DOCKER_HUB_USERNAME }}/${REPOSITORY_NAME}
          docker rmi -f $REPOSITORY_NAME:$BRANCH_NAME || true

      # Build Docker Image
      - name: Build Docker Image
        run: |
          BRANCH_NAME=$(echo "${GITHUB_REF_NAME}" | sed 's/refs\/heads\///' | sed 's/[^a-zA-Z0-9_-]/-/g')
          docker build --platform linux/amd64 -t ${{ secrets.DOCKER_HUB_USERNAME }}/${REPOSITORY_NAME}:latest .

      # Push Docker Image to Docker Hub
      - name: Push Docker Image
        run: |
          BRANCH_NAME=$(echo "${GITHUB_REF_NAME}" | sed 's/refs\/heads\///' | sed 's/[^a-zA-Z0-9_-]/-/g')
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/${REPOSITORY_NAME}:latest

