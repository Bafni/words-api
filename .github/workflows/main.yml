name: Build, Push Docker Image and Create Release

on:
  workflow_dispatch:
  push:
    branches:
      - master
      - main
      - develop

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Node.js for Semantic Release
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'npm'

      # Install dependencies
      - name: Install dependencies
        run: npm ci

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      # Clean up old images
      - name: Clean up old images
        run: |
          BRANCH_NAME=$(echo "${GITHUB_REF_NAME}" | sed 's/[^a-zA-Z0-9_-]/-/g')
          VERSION=$(npx semantic-release --dry-run --no-ci | grep "The next release version is" | awk '{print $6}')

          if [ "${BRANCH_NAME}" = "master" ] || [ "${BRANCH_NAME}" = "main" ]; then
            REPO_NAME="api-production"
          elif [ "${BRANCH_NAME}" = "develop" ]; then
            REPO_NAME="api-develop"
          else
            REPO_NAME="node-api"
          fi

          docker rmi -f ${{ secrets.DOCKER_HUB_USERNAME }}/${REPO_NAME}:${BRANCH_NAME}-${VERSION} || true
          if [ "${BRANCH_NAME}" = "master" ] || [ "${BRANCH_NAME}" = "main" ]; then
            docker rmi -f ${{ secrets.DOCKER_HUB_USERNAME }}/${REPO_NAME}:latest || true
          fi

      # Build Docker Image
      - name: Build Docker Image
        run: |
          BRANCH_NAME=$(echo "${GITHUB_REF_NAME}" | sed 's/[^a-zA-Z0-9_-]/-/g')
          VERSION=$(npx semantic-release --dry-run --no-ci | grep "The next release version is" | awk '{print $6}')

          if [ "${BRANCH_NAME}" = "master" ] || [ "${BRANCH_NAME}" = "main" ]; then
            REPO_NAME="api-production"
          elif [ "${BRANCH_NAME}" = "develop" ]; then
            REPO_NAME="api-develop"
          else
            REPO_NAME="node-api"
          fi

          docker build --platform linux/amd64 -t ${{ secrets.DOCKER_HUB_USERNAME }}/${REPO_NAME}:${BRANCH_NAME}-${VERSION} .

          if [ "${BRANCH_NAME}" = "master" ] || [ "${BRANCH_NAME}" = "main" ]; then
            docker tag ${{ secrets.DOCKER_HUB_USERNAME }}/${REPO_NAME}:${BRANCH_NAME}-${VERSION} ${{ secrets.DOCKER_HUB_USERNAME }}/${REPO_NAME}:latest
          fi

      # Push Docker Image to Docker Hub
      - name: Push Docker Image
        run: |
          BRANCH_NAME=$(echo "${GITHUB_REF_NAME}" | sed 's/[^a-zA-Z0-9_-]/-/g')
          VERSION=$(npx semantic-release --dry-run --no-ci | grep "The next release version is" | awk '{print $6}')

          if [ "${BRANCH_NAME}" = "master" ] || [ "${BRANCH_NAME}" = "main" ]; then
            REPO_NAME="api-production"
          elif [ "${BRANCH_NAME}" = "develop" ]; then
            REPO_NAME="api-develop"
          else
            REPO_NAME="node-api"
          fi

          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/${REPO_NAME}:${BRANCH_NAME}-${VERSION}

          if [ "${BRANCH_NAME}" = "master" ] || [ "${BRANCH_NAME}" = "main" ]; then
            docker push ${{ secrets.DOCKER_HUB_USERNAME }}/${REPO_NAME}:latest
          fi

  release:
    runs-on: ubuntu-latest
    if: github.ref_name == 'master' || github.ref_name == 'main'

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'npm'

      # Install dependencies
      - name: Install dependencies
        run: npm ci

      # Run Semantic Release
      - name: Run Semantic Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }} # Optional if publishing to npm
        run: npx semantic-release
