name: Build and Push Docker Image

on:
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up .env file with Docker Hub username and branch name
      - name: Set up .env file
        run: |
          echo "DOCKER_HUB_USERNAME=${{ secrets.DOCKER_HUB_USERNAME }}" >> .env.docker
          echo "BRANCH_NAME=${GITHUB_REF_NAME}" >> .env.docker  

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      # Configure Git for semantic-release
      - name: Configure Git for semantic-release
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"
          git remote set-url origin https://x-access-token:${{ secrets.GH_TOKEN }}@github.com/${{ github.repository }}

      # Install Node.js and dependencies
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm ci

      # Get version using semantic-release
      - id: get-version
        run: |
          VERSION=$(npx semantic-release --dry-run --no-ci | grep "The next release version is" | awk '{print $6}')
          if [ -z "$VERSION" ]; then
            echo "Error: VERSION is empty! Ensure that semantic-release has permission to push tags."
            exit 1
          fi
          echo "::set-output name=version::$VERSION"

      # Run semantic-release
      - name: Run Semantic Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npx semantic-release --no-ci --dry-run

  release:
    runs-on: ubuntu-latest
    needs: build-and-push
    if: ${{ needs.build-and-push.outputs.version != '' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm ci

      - name: Configure Git for semantic-release
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"
          git remote set-url origin https://x-access-token:${{ secrets.GH_TOKEN }}@github.com/${{ github.repository }}

      - name: Run Semantic Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release
